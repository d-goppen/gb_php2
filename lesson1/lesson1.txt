
/* 1. Придумать класс, который описывает любую сущность из предметной
   области интернет-магазинов: продукт, ценник, посылка и т.п.
*/

/* 2. Описать свойства класса из п.1 (состояние).
*/

/* 3. Описать поведение класса из п.1 (методы).
*/

/* 4. Придумать наследников класса из п.1. Чем они будут отличаться?
*/

/* 5. Дан код:
*/

class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
$a1 = new A();
$a2 = new A();
$a1->foo(); // 1
$a2->foo(); // 2
$a1->foo(); // 3
$a2->foo(); // 4

/* Что он выведет на каждом шаге? Почему?
  $x - статическая переменная в методе (функции) класса A
  Инициализируется ($x = 0) один раз при первом вызове метода.
  Дальше сохраняет свой значение между вызовами метода.
  Поскольку метод общий для всех экземпляров класса, то и $x - общая
  и увеличивается на 1 при каждом вызове метода foo() независимо от 
  вызывающего обхекта.
*/

/* 6. Немного изменим п.5:
*/

class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
class B extends A {
}
$a1 = new A();
$b1 = new B();
$a1->foo(); // 1
$b1->foo(); // 1
$a1->foo(); // 2
$b1->foo(); // 2

/* 6. Объясните результаты в этом случае.
  В отличии от п.5, здесь метод foo() принадлежит разным классам, 
  похтому статическая переменная $x у каждого класса своя.
*/

/* 7* Дан код:
*/

class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
class B extends A {
}
$a1 = new A;
$b1 = new B;
$a1->foo(); // 1
$b1->foo(); // 1
$a1->foo(); // 2
$b1->foo(); // 2

/* Что он выведет на каждом шаге? Почему?
  По сути код идентичен примеру 6, за исключением отсутствия скобок
  при вызове конструктора. Но поскольку никаких параметров в конструктор
  не передаётся, наличие или отсутствие скобок ни на что не влияет.
*/